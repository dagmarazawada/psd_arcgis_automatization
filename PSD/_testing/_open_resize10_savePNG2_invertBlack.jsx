#target photoshop
#strict on

//alert("Script: open, resize 10%, save as png. - dagmara");

/*
var done1 = ["3211683","3211684","3211685","99877","99479","98048","96506","94865","94774","94514","94511","93812","93807","93806","93795","93790","92760","92746","92682","92442","92397"]
var done2 = ["92268","91362","90134","90116","90105","90096","87853","87206","87197","86796","86351","85615","85608","85446","85288","84862","84550"]
var done3 = ["83721","83469","82735","82472","82061","81743","81733","81732","81437","81298","81287","81286","81285","81284","81282","81030","81015","80021","79883","79763","79762","78351","77840"]
var corruptedFilesNOTdone = ["83862","77821","92397","66637","59260"]

var foldernames = ["77490","72282","67562","66706","66705","66704","66642","66641","66636","66432","66431","66428","66094","62330","62320","62120","60273","60266","60251","60036","59262","59238","59155","59044","59037","59033","59032","59018","59012","59011","58635","58622","58621","58580","58549","58539","58537","58536","58415","58414","58412","58404","57862","57630","57598","57591","57588","57585","57584","57582","57581","57577","57462","57459","57458","57457","57456","57455","57452","57451","57403","56280","56260","55805","53809","53255","53251","53206","50092","49739","49029","49011","48798","48217","47477","47475","47474","47471","47468","46981","46978","46977","46975","46974","46869","46868","46792","46791","46790","46694","46307","45354","43595","43394","43360","43350","43142","43065","42675","41623","41619","41615","40618","40514","40512","40489","40480","40441","40439","40432","40428","40414","39138","38725","38603","38444","38304","38257","38202","38201","37653","37573","37528","36229","35264","35180","34923","34907","34683","33978","33962","33881","33829","33828","33768","33443","33419","33379","32249","32248","3211682","3211681","3211680","3211679","3211678","3211677","3211676","3211675","3211674","3211673","3211672","3211671","3211670","3211669","3211668","3211667","3211666","3211665","3211664","3211663","3211662","3211661","3211660","3211659","3211200","3211199","320978","3209000","3208629","32062","32041","31954","31901","31795","31729","31670","31235","31003","30950","30607","3056788","30516","30280","30045","29980","29966","29864","29863","29294","29075","28694","28682","28677","28676","28667","28665","28663","28657","28653","28647","28535","28533","2846206","2846204","2846190","2846188","2846187","2846186","2846185","2846177","2846176","2846168","2846143","2846136","2846135","2846133","2846132","2846131","2846130","2846129","2846127","2846126","2846125","2846122","2846118","2846117","2846116","2846115","2846112","2846110","2846107","2846105","2846104","2846103","2846102","2846098","2846097","2846096","2846095","2846091","2846039","2846038","2846037","2845977","2845952","2845951","2845950","2845949","2845948","2845947","2845946","2845945","2845944","2845943","2845942","2845941","2845940","2845939","2845938","2845937","2845936","2845935","2845934","2845933","2845931","2845929","2845927","2845926","2845925","2845924","2845921","2845920","2845919","2845918","2845917","2845916","2845915","2845914","2845913","2845911","2845910","2845876","2845875","2845874","2845873","2845872","2845871","2845869","2845868","2845863","2845862","2845861","2845860","2845859","2845858","2845857","2845850","2845848","28265","28137","2782307","2782305","2782304","2782301","2782300","2782298","2782296","2782295","2782294","2782293","2782292","2782291","2782290","2782289","2782287","2782285","2782283","2782276","2782275","2782274","2782273","2782272","2782271","2782270","2782269","2782268","2782267","2782149","2782148","2782147","2782146","2782145","2782144","2782143","2782142","2782140","2782139","2782138","2782137","27563","27246","27240","27096","26920","26600","26511","26489","26442","26080","26076","26051","26050","26041","25985","25964","25961","25960","25751","25635","25520","25330","25275","25197","25161","25157","25029","24739","24559","24441","24187","24159","24136","24026","23811","23810","23809","23514","23487","23469","23255","19634","19631","19348","19347","19330","19260","19236","19232","19207","19206","19203","19200","19199","18415","18414","18413","18412","18411","18410","18409","18408","18407","18406","18405","18404","18402","18399","18395","18393","18392","18391","18390","18388","18378","18376","18171","17937","17840","17126","17051","16637","16627","16591","16570","16529","16528","16527","16526","16525","16523","16522","16521","16483","16482","16481","16480","16479","16478","16477","16476","16475","16474","16473","16472","16470","16468","16466","16464","16463","16462","16461","16460","16458","16456","16455","16454","16453","16452","16451","16450","16449","16448","16038","16037","16036","16035","15989","15948","14480","14250","14163","14098","14097","13753","13747","13746","13500","13285","13284","13274","13224","13215","13214","13207","126548","126476","126417","125798","125789","125788","125780","125779","125777","125641","125630","125615","125614","125613","125442","125057","125056","125055","125045","124848","123524","122780","122691","122690","122689","122688","122687","122538","122537","122536","122434","122193","122180","12177","12150","12146","12134","12133","12114","12077","120481","119879","119694","119574","119553","119353","119250","119152","119151","119066","119009","119006","118965","118962","11895","11894","11893","11892","11888","11887","11885","11884","11882","118817","11881","118802","11880","118785","118784","11878","11877","11875","11870","118592","118588","118574","118571","118564","118563","118560","118552","11849","11794","117825","117651","117557","117549","117540","117539","117508","117107","117023","114463","114462","114351","11266","111648","111622","111621","111620","111574","111282","111135","11113","110170","108370","108220","107689","107688","107468","104739","104663","104369","104196","103678","103677","103676","103673","103671","103662","103661","103660","103659","103609","103537","103524","103523","103521","103148","102962","102908","102903","102887","102885","102848","102681","100355","100350","100346","100048","100030"];
*/

var foldernames = ["3211683","3211684","3211685"];

for (index in foldernames) {
	var path1 = "/d/dagmara/automatization/PSD/tif/obot_id/" + foldernames[index];
	runthis(path1);
}

function runthis(path) {

var path = path1;

var inputFolder = new Folder(path);
var inputFiles = inputFolder.getFiles("*.tif");
	
for(index in inputFiles)
    {
    // open the file
    var fileToOpen = new File(inputFiles[index]);
    open(fileToOpen);

	// get a reference to the current (active) document and store it in a variable named "doc"
	doc = app.activeDocument;  

	// change the color mode to RGB.  Important for resizing GIFs with indexed colors, to get better results
    doc.changeMode(ChangeMode.GRAYSCALE); 	
    doc.changeMode(ChangeMode.RGB);  

	// these are our values for the end result width and height of our image
	var fWidth = 10;
	var fHeight = 10;

	doc.resizeImage(UnitValue(fWidth,"%"),UnitValue(fHeight,"%"),null,ResampleMethod.BICUBIC);
    
    // invert colors
    var pixelLoc = [UnitValue("10 pixels") , UnitValue("10 pixels")];
    var colorSamplerRef = doc.colorSamplers.add(pixelLoc);
    //alert(colorSamplerRef.color.rgb.hexValue);

    if ( colorSamplerRef.color.rgb.hexValue == "000000" ) {
		var layerRef = app.activeDocument.artLayers.getByName("Tło");
        layerRef.invert();
	}

	// save as png
	var Name = app.activeDocument.name.replace(/\.[^\.]+$/, ''); 
	var Ext = decodeURI(app.activeDocument.name).replace(/^.*\./,''); 
	//if(Ext.toLowerCase() != 'psd') return; 
	var Path = app.activeDocument.path; 
	var saveFile = File(Path + "/" + Name +".png"); 
	if(saveFile.exists) saveFile.remove(); 
    var originalFile = File(Path + "/" + Name +".tif"); 
    //originalFile.remove();

	SavePNG(saveFile); 
    app.activeDocument.close(SaveOptions.DONOTSAVECHANGES);

	// dispose
    fileToOpen = null;
    psdOptions = null;
    file  = null;
}

inputFolder = null;
inputFiles = null;

}

function SavePNG(saveFile){ 
    var options = new ExportOptionsSaveForWeb();
    options.format = SaveDocumentType.PNG;
    options.interlaced = true;
    options.quality = 60;

    var newName = saveFile;

    doc.exportDocument(File(newName),ExportType.SAVEFORWEB,options); 
}

/*
function SavePNG(saveFile){ 
    pngSaveOptions = new PNGSaveOptions(6, true); // compression 6, interlaced true
	activeDocument.saveAs(saveFile, pngSaveOptions, true, Extension.LOWERCASE); 
}
*/

function GetFileName(fullPath){
    var m = fullPath.match(/(.*)[\/\\]([^\/\\]+)\.\w+$/);
    return m[2];
}

while (app.documents.length) {
	app.activeDocument.close(SaveOptions.DONOTSAVECHANGES);
}
